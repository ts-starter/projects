apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  namespace: "{{ .Values.nameSpace }}"
  labels:
    app: "{{ .Chart.Name }}"
    chart: "{{ .Chart.Name }}"
    version: "{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
      chart: "{{ .Chart.Name }}"
      version: "{{ .Chart.Version }}"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
        chart: "{{ .Chart.Name }}"
        version: "{{ .Chart.Version }}"
    spec:
      serviceAccount: "{{ .Values.deployment.serviceAccount }}"
      containers:
        - name: "{{ .Chart.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: {{ .Values.configMap.appId.key }}
              valueFrom:
                configMapKeyRef:
                  key: {{ .Values.configMap.appId.key }}
                  name: "{{ .Chart.Name }}"
            - name: {{ .Values.configMap.logLevel.key }}
              valueFrom:
                configMapKeyRef:
                  key: {{ .Values.configMap.logLevel.key }}
                  name: "{{ .Chart.Name }}"
            - name: {{ .Values.configMap.requestLimit.key }}
              valueFrom:
                configMapKeyRef:
                  key: {{ .Values.configMap.requestLimit.key }}
                  name: "{{ .Chart.Name }}"
            - name: {{ .Values.configMap.sessionSecret.key }}
              valueFrom:
                configMapKeyRef:
                  key: {{ .Values.configMap.sessionSecret.key }}
                  name: "{{ .Chart.Name }}"
            - name: {{ .Values.configMap.logDirectory.key }}
              valueFrom:
                configMapKeyRef:
                  key: {{ .Values.configMap.logDirectory.key }}
                  name: "{{ .Chart.Name }}"                                                       
          ports:
            - containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
      restartPolicy: {{ .Values.deployment.restartPolicy }}